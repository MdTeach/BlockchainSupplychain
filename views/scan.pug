doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='author', content='ZXing for JS')
    title ZXing TypeScript | Decoding from camera stream
    link(rel='preload', as='style', onload="this.rel='stylesheet';this.onload=null", href='https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic')
    link(rel='preload', as='style', onload="this.rel='stylesheet';this.onload=null", href='https://unpkg.com/normalize.css@8.0.0/normalize.css')
    link(rel='preload', as='style', onload="this.rel='stylesheet';this.onload=null", href='https://unpkg.com/milligram@1.3.0/dist/milligram.min.css')
  body
    main.wrapper(style='padding-top:2em')
      section#demo-content.container
        h1.title Scan QR Code from Video Camera
        p
          a.button-small.button-outline(href='../../index.html') HOME 🏡
        p
          | This example shows how to scan a QR code with ZXing javascript library from the device video camera. If more
          | than one video input devices are available (for example front and back camera) the example shows how to read
          | them and use a select to change the input device.
        div
          a#startButton.button Start
          a#resetButton.button Reset
        div
          video#video(width='300', height='200', style='border: 1px solid gray')
        #sourceSelectPanel(style='display:none')
          label(for='sourceSelect') Change video source:
          select#sourceSelect(style='max-width:400px')
        label Result:
        blockquote
          p#result
        p
          | See the 
          a(href='https://github.com/zxing-js/library/tree/master/docs/examples/qr-camera/') source code
          |  for this example.
      footer.footer
        section.container
          p
            | ZXing TypeScript Demo. Licensed under the 
            a(target='_blank', href='https://github.com/zxing-js/library#license', title='MIT') MIT
            | .
    script(type='text/javascript', src='https://unpkg.com/@zxing/library@latest')
    script(type='text/javascript').
      window.addEventListener('load', function () {
      let selectedDeviceId;
      const codeReader = new ZXing.BrowserQRCodeReader()
      console.log('ZXing code reader initialized')
      codeReader.getVideoInputDevices()
      .then((videoInputDevices) => {
      const sourceSelect = document.getElementById('sourceSelect')
      selectedDeviceId = videoInputDevices[0].deviceId
      if (videoInputDevices.length >= 1) {
      videoInputDevices.forEach((element) => {
      const sourceOption = document.createElement('option')
      sourceOption.text = element.label
      sourceOption.value = element.deviceId
      sourceSelect.appendChild(sourceOption)
      })
      sourceSelect.onchange = () => {
      selectedDeviceId = sourceSelect.value;
      };
      const sourceSelectPanel = document.getElementById('sourceSelectPanel')
      sourceSelectPanel.style.display = 'block'
      }
      document.getElementById('startButton').addEventListener('click', () => {
      codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((result) => {
      console.log(result)
      document.getElementById('result').textContent = result.text
      }).catch((err) => {
      console.error(err)
      document.getElementById('result').textContent = err
      })
      console.log(`Started continous decode from camera with id ${selectedDeviceId}`)
      })
      document.getElementById('resetButton').addEventListener('click', () => {
      codeReader.reset()
      console.log('Reset.')
      })
      })
      .catch((err) => {
      console.error(err)
      })
      })
